power.t.test(n = 100, delta = -0.1, sd = 0.04, sig.level = 0.05, alternative="one.sided")
power.t.test(n = 100, delta = 0.1, sd = 0.04, sig.level = 0.05, alternative="one.sided")
power.t.test(n = 100, delta = -0.01, sd = 0.04, sig.level = 0.05, alternative="one.sided")
power.t.test(n = 100, delta = 0.01, sd = 0.04, sig.level = 0.05, alternative="one.sided")
power.t.test(n = 100, delta = 0.01, sd = 0.04, type="one.sample",sig.level = 0.05, alternative="one.sided")
power.t.test(power=0.9 delta = 0.01, sd = 0.04, type="one.sample",sig.level = 0.05, alternative="one.sided")
power.t.test(power=0.9, delta = 0.01, sd = 0.04, type="one.sample",sig.level = 0.05, alternative="one.sided")
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
head(mns)
length(mns)
rexp(40, rate=0.2)
25/40
help(qqnorm)
qqnorm(mns main ="Normal Q-Q Plot")
qqnorm(mns, main ="Normal Q-Q Plot")
qqline(mns, main ="Normal Q-Q Plot")
quantile(rnorm(200),probs = seq(0.01,0.99,0.01))
library(ToothGrowth)
load(ToothGrowth)
load("ToothGrowth")
library("ToothGrowth")
data("ToothGrowth")
str(ToothGrowth)
range(ToothGrowth$len)
unique(ToothGrowth$dose)
unique(ToothGrowth$supp)
head(ToothGrowth)
version
library(smbinning)
getwd()
setwd("~/Desktop/AMA_Project/BOSEVT")
source("EventAgg.R")
smbinning(Agg_all, Renew, B_Order_12mos)
View(Agg_all)
smbinning(Agg_all, "Renew", "B_Order_12mos")
result <- smbinning(df = Agg_all, y = "Renew", x = "B_Order_12mos")
result
result <- smbinning(df = Agg_all, y = "Renew", x = "B_order_12mos")
result
result <- smbinning(df = Agg_all, y = "Renew", x = "B_recency")
result
result <- smbinning(df = Agg_all, y = "Renew", x = "B_Hr_Email_12mos")
result
hist(Agg_all$B_Hr_Email_12mos)
smbinning.eda(Agg_all$B_Hr_Email_12mos)
smbinning.eda(Agg_all)
tempt <- Agg
tempt$B_recency[tempt$B_recency == Inf] <- 0
View(tempt)
nrow(subset(tempt, B_recency ==0))
source("EventAgg.R")
nrow(subset(Agg_all, B_recency ==0))
nrow(subset(Agg_all, B_recency ==NA))
nrow(subset(Agg_all, B_recency == "NA")
nrow(subset(Agg_all, B_recency == "NA"))
nrow(subset(Agg_all, is.na(B_recency)))
source("IV_WOE.R")
rm(list=ls(all=TRUE))
source("IV_WOE.R")
smbinning.edu(Agg_all)
smbinning.eda(Agg_all)
smbinning(Agg_all, B_recency, Renew)
smbinning(Agg_all, "B_recency", "Renew")
smbinning(Agg_all, "Renew","B_recency")
?smbinning
result <-smbinning(Agg_all, "Renew","B_recency")
result$ivtable
result
result <- =smbinning.sumiv(Agg_all, y="Renew")
result <- smbinning.sumiv(Agg_all, y="Renew")
result
library(information)
install.packages("information")
install.packages("Information")
library(Information)
IV <- create_infotables(data=Agg_all, y="Renew", parallel = FALSE)
View(IV)
CheckInputs(train=Agg_all,trt = NULL, y = "Renew")
CheckInputs(train=Agg_all,valid=NULL,trt = NULL, y = "Renew")
CI <- CheckInputs(train=Agg_all,valid=NULL,trt = NULL, y = "Renew")
View(CI)
IV <- create_infotables(data=CI, y="Renew", parallel = FALSE)
data(train, package="Information")
View(train)
tempt <- CheckInputs(Train, valid=NULL, trt = NULL, y = "TREATMENT")
tempt <- CheckInputs(train, valid=NULL, trt = NULL, y = "TREATMENT")
View(tempt)
class(tempt)
tempt[[1]]
View(tempt[[1]])
unique(train$PURCHASE)
train <- subset(train, TREATMENT==1)
IV <- Information::create_infotables(data=train, y="PURCHASE", parallel=FALSE)
print(head(IV$Summary), row.names = FALSE)
IV <- creat_infotables(data=Agg_all, y="Renew",parallel=FALSE)
IV <- Information::creat_infotables(data=Agg_all, y="Renew",parallel=FALSE)
IV <- create_infotables(data=Agg_all, y="Renew",parallel=FALSE)
print(head(IV$Summary),row.names=FALSE)
print(IV$Summary,row.names=FALSE)
print(IV$Tables$B_order_12mos)
print(tail(IV$Summary), row.names = FALSE);
IV <- create_infotables(data=Agg_all, y = "Renew", parallel = FALSE, trt = 1);
print(IV$Tables$B_order_12mos);
print(IV$Tables$B_recency);
plot(infotables(IV, "B_order_12mos"))
plot_infotables(IV, "B_order_12mos"))
plot_infotables(IV, "B_order_12mos")
print(IV$Summary, row.names = FALSE)
plot_infotables(IV, IV$Summary$Variable[3:6],same_scale = TRUE)
plot_infotables(IV, "B_order_12mos");
head(IV[[1]])
names(IV)
names(IV$Tables)
name(IV$Tables$B_recency)
names(IV$Tables$B_recency)
IV$Tables$B_recency
names(IV$Summary)
names(IV$Summary$Variable)
?plot_infotables
names <-names(IV$Tables)
MultiPlot(IV, names[4:6])
MultiPlot(IV, names[3:6])
MultiPlot(IV, names[3:6],same_scales=TRUE)
?plot_infotables
names(IV$Tables)
print(IV$Tables$B_order_12mos)
print(IV$Tables$B_order_6mos)
print(IV$Tables$B_order_ChkIn_12mos)
print(IV$Tables$B_order_ChkIn_6mos)
t <- data.frame(IV$Tables$B_order_12mos)
View(t)
t1<- rbind(t,IV$Tables$B_order_6mos)
?create_infotables
Information:::create_infotables()
create_infotables()
create_infotables
print(IV$Tables$B_recency)
probs = c(1:9/10)
probs
WOE
?Aggregate
t <- Aggregate(Agg_all, names(Agg_all[3:6],"Renew"))
Aggregate
print(IV$Tables[4])
print(IV$Tables[5])
print(IV$Tables[6])
print(IV$Tables[7])
print(IV$Tables[8])
print(IV$Tables[9])
print(IV$Tables[10])
print(IV$Tables[11])
print(IV$Tables[12])
print(IV$Tables[13])
print(IV$Tables[14])
print(IV$Tables[15])
print(IV$Tables[16])
print(IV$Tables[17])
print(IV$Tables[18])
print(IV$Tables[19])
print(IV$Summary, row.names = FALSE);
t <- lapply(Agg_all, summary)
t <- do.call(rbind, lapply(Agg_all, summary))
t[[1]]
t <- lapply(Agg_all, summary)
t[[1]]
t[[2]]
t <- do.call(rbind, lapply(Agg_all, summary))
View(t)
names(t[[1]])
t <- lapply(Agg_all, summary)
t[[4]]
t[[5]]
View(Agg_all)
t <- do.call(rbind, lapply(Agg_all[,4:ncol(Agg_all)],summary))
View(t)
outlier_values <- boxplot.stats(Agg_all$B_recency)$out
View(outlier_values)
outlier_values <- boxplot.stats(Agg_all$B_recency)
names(outlier_values)
head(outlier_values)
?boxplot.stats
boxplot.stats(Agg_all$B_recency)
boxplot(Agg_all$B_recency)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
hist(Agg_all$B_recency)
hatvalues(Agg_all$B_recency)
?hatvalues
hat(Agg_all$B_recency)
hist(Agg_all$B_recency, frequency = TRUE)
hist(Agg_all$B_recency, probability  = TRUE)
warnings()
chisq.out.test(Agg_all$B_recency, variance=var(Agg_all$B_recency), opposite = FALSE)
install.packages("outliers")
library(outliers)
chisq.out.test(Agg_all$B_recency, variance=var(Agg_all$B_recency), opposite = FALSE)
?chisq.out.test
t <- na.omit(agg_all$B_recency)
t <- na.omit(Agg_all$B_recency)
chisq.out.test(t, variance=var(t), opposite = FALSE)
hist(t)
hist(Agg_all$B_amt_6mos)
sMR <- do.call(rbind, lapply(Agg_all[,4:ncol(Agg_all)],summary));
rm(probs)
rm(t)
hist(Agg_all$B_amt_12mos)
hist(Agg_all$B_order_12mos)
hist(Agg_all$B_Hr_Email_6mos)
hist(Agg_all$B_OdTp_Free_12mos)
View(Agg_all)
View(sMR)
uniNum <- function(x) length(unique(x))
unNm <- do.call(rbind, lapply(Agg_all[,4:ncol(Agg_all)], UniNum));
unNm <- do.call(rbind, lapply(Agg_all[,4:ncol(Agg_all)], uniNum));
View(unNm)
unique(Agg_all$B_order_12mos)
source("EventFreq3.R")
View(BosEvtRenew)
View(BosEvtRenew2)
source("EventAgg.R")
View(BosEvtRenew)
t <- subset(BosEvtRenew, MEMBER.ID == "2891613")
View(t)
?hist
?seq
b<-seq(0,max(Agg_all$B_OdTp_Free_12mos), by = 1)
b<-seq(0,max(Agg_all$B_OdTp_Free_12mos,na.rm=T), by = 1)
b
hist(Agg_all$B_OdTp_Free_12mos, breaks=b)
hist(IV$Tables[4])
hist(IV$Tables[[4]])
IV$Tables[[4]]
hist(Agg_all[,4])
hist(Agg_all$B_order_12mos)
hist(Agg_all$B_order_6mos)
hist(Agg_all$B_order_ChkIn_12mos)
hist(Agg_all$B_order_ChkIn_6mos)
hist(Agg_all$B_order_NotChkIn_12mos)
hist(Agg_all$B_order_NotChkIn_6mos)
hist(Agg_all$B_amt_12mos)
summary(Agg_all$B_amt_12mos)
hist(subset(Agg_all$B_amt_12mos>150))
hist(subset(Agg_all$B_amt_12mos,Agg_all$B_amt_12mos>150))
hist(subset(Agg_all$B_amt_12mos,Agg_all$B_amt_12mos>100))
hist(Agg_all$B_amt_12mos)
subset(Agg_all, Agg_all$B_amt_12mos == "297")
subset(Agg_all, Agg_all$B_amt_12mos == "297.00")
which(max(Agg_all$B_amt_12mos))
subset(Agg_all, Agg_all$B_amt_12mos == "296.97")
t<-subset(Agg_all, Agg_all$B_amt_12mos == "296.97")
View(t)
t1 <- subset(BosEvtRenew2, BosEvtRenew2$MEMBER.ID == "3260719")
View(t1)
summary(Agg_all$B_amt_12mos)
hist(Agg_all$B_amt_6mos)
hist(Agg_all$B_amt_ChkIn_12mos)
hist(Agg_all$B_amt_ChkIn_6mos)
hist(Agg_all$B_amt_6mos)
hist(Agg_all$B_amt_ChkIn_6mos)
hist(Agg_all$B_amt_NotChkIn_12mos)
hist(Agg_all$B_amt_NotChkIn_6mos)
hist(Agg_all$B_recency)
hist(Agg_all$B_OdTp_Free_12mos)
hist(Agg_all$B_OdTp_Free_6mos)
hist(Agg_all$B_OdTp_PayPal_12mos)
hist(Agg_all$B_OdTp_PayPal_6mos)
hist(Agg_all$B_OdTp_Complimentary_12mos)
hist(Agg_all$B_OdTp_Complimentary_6mos)
hist(Agg_all$B_OdTp_Other_12mos)
hist(Agg_all$B_OdTp_Other_6mos)
hist(Agg_all$B_Hr_AMAWeb_12mos)
hist(Agg_all$B_Hr_AMAWeb_6mos)
hist(Agg_all$B_Hr_AWAWeb_6mos)
hist(Agg_all$B_Hr_Email_12mos)
hist(Agg_all$B_Hr_Email_6mos)
hist(Agg_all$B_Hr_SocialMedia_12mos)
hist(Agg_all$B_Hr_SocialMedia_6mos)
hist(Agg_all$B_Hr_Friend_12mos)
hist(Agg_all$B_Hr_Friend_6mos)
hist(Agg_all$B_Hr_Friend_6mos)
hist(Agg_all$B_Hr_SocialMedia_6mos)
View(Agg_all)
source("EventAgg.R")
source("IV_WOE.R")
hist(Agg_all$B_Hr_Friend_12mos)
hist(Agg_all$B_Hr_Friend_6mos)
hist(Agg_all$B_Hr_Other_12mos)
hist(Agg_all$B_Hr_Other_6mos)
View(sMR)
table(Agg_all$B_order_12mos)
table(Agg_all$B_order_6mos)
t1 <- table(Agg_all$B_order_12mos)
t2 <- table(Agg_all$B_order_6mos)
write.table(t1, file="table", append=FALSE)
write.table(t1, file="table.csv", append=FALSE)
write.table(t1, file="table.csv", append=FALSE,sep="\t", row.names = FALSE)
write.table(t1, file="table.csv", append=FALSE,sep="\n", row.names = FALSE)
write.table(t1, file="table.csv", append=FALSE,sep=" ",eol="\r" row.names = FALSE)
write.table(t1, file="table.csv", append=FALSE,eol="\r" row.names = FALSE)
write.table(t1, file="table.csv", append=FALSE,eol="\r", row.names = FALSE)
write.table(t1, file="table.csv", append=FALSE,sep="\t", eol="\r", row.names = FALSE)
write.csv(t1, file="table.csv", append=FALSE, row.names = FALSE)
t1
names(t1)
write.table_with_header <- function(x, file, header){
cat(header,"\n",file = file);
write.csv(x,file, append = T);
}
write.table_with_header((t1,"table.csv",header=colnames(Agg_all[4])))
write.table_with_header((t1,"table.csv",header=colnames(Agg_all)[4]))
write.table_with_header(t1,"table.csv",header=colnames(Agg_all)[4])
colnames(Agg_all)[4]
write.table_with_header <- function(x, file, header){
y <- cat(header,"\n",file = file);
write.csv(y,file, append = T,row.names=FALSE);
}
write.table_with_header(t1,"table.csv",header=colnames(Agg_all)[4])
cat(colnames(Agg_all)[4],"\n","table.csv")
write.csv(t1, "table.csv",row.names=FALSE)
write.csv(t1, "table.csv")
write.table_with_header <- function(x, file, header){
cat(header,"\n",file = file);
write.csv(x,file);
}
write.table_with_header(t1, "table.csv",header=colnames(Agg_all)[4])
write.table_with_header(t1, "table.csv",header=colnames(Agg_all)[4])
write.table_with_header(t1, "table.csv",header=colnames(Agg_all)[4],spe=",")
write.table_with_header(t1, "table.csv",header=colnames(Agg_all)[4],sep=",")
write.table_with_header <- function(x, file, header,sep){
cat(header,"\n",file = file);
write.csv(x,file,sep=",");
}
write.table_with_header(t1, "table.csv",header=colnames(Agg_all)[4],sep=",")
write.table_with_header <- function(x, file, h){
writeLines(h, file)
write.csv(x,file,sep=",");
}
write.table_with_header(t1, "table.csv",h=colnames(Agg_all)[4])
write.table_with_header <- function(x, file, h){
writeLines(h, file)
write.table(x,file,sep=",");
}
write.table_with_header(t1, "table.csv",h=colnames(Agg_all)[4])
write.table_with_header <- function(x, file, h){
writeLines(h, file)
write.table(x,file,row.names = FALSE);
}
write.table_with_header(t1, "table.csv",h=colnames(Agg_all)[4])
write.table_with_header <- function(x, file, h){
writeLines(h, file)
write.csv(x,file,row.names = FALSE);
}
write.table_with_header(t1, "table.csv",h=colnames(Agg_all)[4])
Table <- file("table.csv", "w")
write.table_with_header <- function(x, file, h){
writeLines(h, file)
write.csv(x,file,row.names = FALSE);
}
write.table_with_header(t1, Table, h=colnames(Agg_all)[4])
Table <- file("table.csv", "w")
write.table_with_header <- function(x, file, h){
writeLines(h, file)
write.csv(x,file);
}
Table <- file("table.csv", "w")
write.table_with_header <- function(x, file, h){
writeLines(h, file)
write.csv(x,file);
close(Table)
}
write.table_with_header(t1,Table, h=colnames(Agg_all)[4])
Table <- file("table.csv", "w")
write.table_with_header <- function(x, file, h){
writeLines(h, file)
write.csv(x,file,append=TRUE);
close(Table)
}
for (i in 4:ncol(Agg_all)){
t<- Agg_all[,i];
write.table_with_header(table(t),Table,h=colnames(t));
}
write.table_with_header(t1, Table,h=colnames(Agg_all[4]))
write.table_with_header(t(t1), Table,h=colnames(Agg_all[4]))
Table <- file("table.csv", "w")
write.table_with_header <- function(x, file, h){
writeLines(h, file)
write.csv(x,file,append=TRUE);
}
write.table_with_header(t(t1), Table,h=colnames(Agg_all[4]))
write.table_with_header(t1, Table,h=colnames(Agg_all[4]))
Table <- file("table.csv", "w")
write.table_with_header <- function(x, file, h){
writeLines(h, file)
write.csv(x,file);
}
write.table_with_header(t1, Table,h=colnames(Agg_all[4]))
close(Table)
write.table_with_header(t(t1), Table,h=colnames(Agg_all[4]))
write.table_with_header <- function(x, file, h){
writeLines(h, file)
write.csv(x,file);
}
write.table_with_header(t1,"table.csv",h=colnames(Agg_all[4]))
close("table.csv")
Table <- file("table.csv", "w")
write.table_with_header <- function(x, file, h){
writeLines(h, file)
write.csv(x,file);
}
write.table_with_header(t1, Table, h=colnames(Agg_all[4]))
write.table_with_header(t2, Table, h=colnames(Agg_all[5]))
close(Table)
write.table_with_header(t(t1), Table, h=colnames(Agg_all[4]))
Table <- file("table.csv", "w")
write.table_with_header <- function(x, file, h){
writeLines(h, file)
write.csv(x,file);
}
for (i in 4:ncol(Agg_all)){
t<- Agg_all[,i];
write.table_with_header(table(t),Table,h=colnames(t));
for (i in 4:ncol(Agg_all)){
t<- Agg_all[,i];
write.table_with_header(table(t),Table,h=colnames(t));
}
for (i in 4:ncol(Agg_all)){
t<- Agg_all[,i];
write.table_with_header(table(t),Table,h=colnames(Agg_all)[i]);
}
close(Table);
IVsMR<-IV$Summary;
write.csv(IVsMR,"IV_Summary.csv", row.names = FALSE);
print(IV$Tables$B_recency)
plot_infotables((IV, "B_recency"))
plot_infotables(IV, "B_recency")
data(train)
a <- data(train)
class(a)
dim(train)
tree <- hclustvar(Agg_all[,4:10])
install.packages("ClustOfVar")
library(ClustOfVar)
?hclustvar
tree <- hclustvar(Agg_all[,4:10])
names(tree)
plot(tree)
tree <- hclustvar(Agg_all[,4:26])
source("EventAgg.R")
source("EventAgg.R")
source("EventAgg.R")
source("IV_WOE.R")
tree <- hclustvar(Agg_all[,4:26])
plot(tree)
library(glmnet)
IV$Summary$B_recency
names(IV$Summary)
names(IV)
names(IV$Tables)
print(IV$Tables$B_order_12mos)
names(IV$Summary)
Aggregate(Agg_all, "B_order_12mos", "Renew")
Aggregate(Agg_all, "B_order_12mos", "Renew",trt=0)
Aggregate(Agg_all, "B_order_12mos", "Renew",trt=NULL)
?woe
?WOE
?Aggregate
IV$Tables$B_order_12mos
names(IV$Tables$B_order_12mos)
IV$Tables$B_order_12mos$B_order_12mos
t <- Aggregate(Agg_all, "B_order_12mos", "Renew", breaks=IV$Tables$B_order_12mos$B_order_12mos)
t <- Aggregate(Agg_all, "B_order_12mos", "Renew", breaks=IV$Tables$B_order_12mos$B_order_12mos,trt=NULL)
?WOE
WOE
Aggregate
?Aggregate
?WOE
?ave
cumsum(1:10)
IV$Tables$B_order_12mos
b <- c(0,0,1,1,2,2,3,13)
t <- Aggregate(Agg_all, "B_order_12mos", "Renew", breaks = b, trt=NULL)
b <- c(NA,0,0,1,1,2,2,3,13)
t <- Aggregate(Agg_all, "B_order_12mos", "Renew", breaks = b, trt=NULL)
install.packages("InformationValue")
data('SimData')
WOE(X=SimData$X.Cat, Y=SimData$Y.Binary)
library(InformationValue)
data('SimData')
WOE(X=SimData$X.Cat, Y=SimData$Y.Binary)
WOE(X=SimData$X.Cat, Y=SimData$Y.Binary)
head(WOE(X=SimData$X.Cat, Y=SimData$Y.Binary))
head(WOETable(X=SimData$X.Cat, Y=SimData$Y.Binary))
rm(list=ls(all=TRUE))
IV <- IV(Agg_all, Agg_all$Renew, valueOfGood == "1");
source("IV_WOE.R")
source("IV_WOE.R")
View(unNm)
IV <- IV(Agg_all, Agg_all$Renew, valueOfGood == "1");
IV <- IV(Agg_all, Agg_all$Renew, valueOfGood == 1);
IV <- IV(Agg_all, Agg_all$Renew);
IV
names(IV)
IV <- IV(Agg_all$B_order_12mos, Agg_all$Renew);
IV
View(IV)
setwd("~/Desktop/AMA_ToGitHub")
source("EventAgg.R")
View(Agg_all)
View(Agg)
View(Agg_all)
